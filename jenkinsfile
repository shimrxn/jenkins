pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
                // Simulate build step
                echo 'Using Maven to build the application.'
                // Example command: sh 'mvn clean package'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Simulate test step
                echo 'Using JUnit for unit tests and TestNG for integration tests.'
                // Example command: sh 'mvn test'
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                // Simulate code analysis step
                echo 'Using SonarQube for code analysis.'
                // Example command: sh 'mvn sonar:sonar'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Simulate security scan step
                echo 'Using OWASP Dependency-Check for security scanning.'
                // Example command: sh 'dependency-check --project my-app --scan ./'
            }
            post {
                always {
                    emailext (
                        to: 'rozarioshimron@gmail.com',
                        subject: "Security Scan Completed: ${currentBuild.fullDisplayName}",
                        body: "The security scan stage has completed with status: ${currentBuild.result}.",
                        attachLog: true
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging server...'
                // Simulate deployment to staging
                echo 'Using AWS CLI for deployment to staging.'
                // Example command: sh 'aws deploy create-deployment ...'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Simulate integration tests on staging
                echo 'Using TestNG for integration testing on staging.'
                // Example command: sh 'mvn integration-test -Denv=staging'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production server...'
                // Simulate deployment to production
                echo 'Using AWS CLI for deployment to production.'
                // Example command: sh 'aws deploy create-deployment ...'
            }
        }
    }

    post {
        always {
            emailext (
                to: 'rozarioshimron@gmail.com',
                subject: "Jenkins Pipeline: ${currentBuild.fullDisplayName}",
                body: "Pipeline run completed with status: ${currentBuild.result}. Please check Jenkins for more details.",
                attachLog: true
            )
        }
    }
}
